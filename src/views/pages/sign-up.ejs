<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <%- include('../partials/nav') %>
  </header>

  <div class="container">
    Sign Up for a new account or <a href="/sign-in">click here to sign in with an existing account</a>
    <form id="login-form">
      <label>Login</label>
      <input id="email" type="text" name="email" />
      <label>Password</label>
      <input type="password" name="password" />
      <button>Log in</button>
    </form>
    <div id="login-error" style="display: none;">
    </div>
    <a href="/dashboard">Dashboard</a>
  </div>
</body>

<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>
  //import { getAuth, createUserWithEmailAndPassword } from "firebase/auth";

  window.onload = () => {
    console.log('Running onload')
    const firebaseConfig = {
      apiKey: "AIzaSyAEUc9X2TKp-dWj2n6LRfEUuOPBLUJikko",
      authDomain: "dogfeed-1e078.firebaseapp.com",
      projectId: "dogfeed-1e078",
      storageBucket: "dogfeed-1e078.appspot.com",
      messagingSenderId: "281873537033",
      appId: "1:281873537033:web:3ac11d2cd3df18268c00d8"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const email = event.target.email.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Create a new user using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard

      //
      const auth = firebase.auth();
      auth.createUserWithEmailAndPassword(email, password)
        .then((userCredential) => {
          // Signed in 
          const user = userCredential.user;
          // ...
          user.getIdToken().then((idToken) => {
             //manage it server side
             fetch('/sessionLogin',{
               method: 'POST',
               headers: {'Content-Type': 'application/json'},
               body: JSON.stringify({idToken})
             }).then(()=> {
               window.location.assign('/dashboard')
             })
          })
        })
        //.catch((error) => {
          //const errorCode = error.code;
          //const errorMessage = error.message;
          // ..
        //});

        return false;
      });
  };
</script>

</html>